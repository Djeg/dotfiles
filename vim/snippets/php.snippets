snippet class
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\l*\>\\\?\)*', '', '')`;

	class `Filename()`
	{
		${1}
	}
snippet interface
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\l*\>\\\?\)*', '', '')`;

	interface `Filename()`
	{
		${1}
	}
snippet testcase
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\l*\>\\\?\)*', '', '')`;

	class `Filename()` extends \PHPUnit_Framework_TestCase
	{
		${1}
	}
snippet sfentity
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\l*\>\\\?\)*', '', '')`;

	use Doctrine\ORM\Mapping as ORM;
	// use Symfony\Component\Validator\Constraints as Assert;

	/**
	 * @ORM\Entity
	 */
	class `Filename()`
	{
		/**
		 * @ORM\Id
		 * @ORM\GeneratedValue
		 * @ORM\Column(type="integer")
		 */
		private $id;

		${1}
	}
snippet sfcommand
	<?php

	namespace `substitute(substitute(expand('%:h'), '/', '\\\\', 'g'), '\(\<\l*\>\\\?\)*', '', '')`;

	use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
	use Symfony\Component\Console\Input\InputInterface;
	use Symfony\Component\Console\Input\InputArgument;
	use Symfony\Component\Console\Input\InputOption;
	use Symfony\Component\Console\Output\OutputInterface;

	class `Filename()` extends ContainerAwareCommand
	{
		/**
		 * {@inheritDoc}
		 */
		protected function configure()
		{
			$this
				->setName('${1}')
				// ->setDescription()
				// ->setHelp()
				// add some arguments:
				// ->addArgument($name, $mode = null, $description = '', $default = null)
				// and options:
				// ->addOption($name, $shortcut = null, $mode = null, $description = '', $default = null)
			;
		}

		/**
		 * {@inheritDoc}
		 */
		protected function execute(InputInterface $input, OutputInterface $output)
		{
			${2}
		}
	}
